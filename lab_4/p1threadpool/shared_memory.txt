// In bktpool.h
extern int task_arg_values[MAX_TASKS];  // Store actual values

// In bktask.c
int task_arg_values[MAX_TASKS];

int bktask_init(int *task_id, void *(*start_routine)(void *), void *arg) {
    // ... existing code ...
    
    // Store the value in our global array
    if (arg != NULL) {
        task_arg_values[tsk->bktaskid] = *((int*)arg);
    }
    
    // ... rest of existing code ...
}

// In bkwrk.c
void * bkwrk_worker(void * arg) {
    // ... existing code ...
    
    while (1) {
        // ... existing code ...
        
        /* Busy running */
        if (wrk->func != NULL) {
#ifndef WORK_THREAD
            // In fork mode, use the stored value
            int task_value = task_arg_values[wrk->bktaskid];
            wrk->func(&task_value);
#else
            // In thread mode, use the original pointer
            wrk->func(wrk->arg);
#endif
        }
        
        // ... existing code ...
    }
}